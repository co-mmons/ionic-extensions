export function findCutBefore($pos) {
    // parent is non-isolating, so we can look across this boundary
    if (!$pos.parent.type.spec.isolating) {
        // search up the tree from the pos"s *parent*
        for (let i = $pos.depth - 1; i >= 0; i--) {
            // starting from the inner most node"s parent, find out
            // if we"re not its first child
            if ($pos.index(i) > 0) {
                return $pos.doc.resolve($pos.before(i + 1));
            }
            if ($pos.node(i).type.spec.isolating) {
                break;
            }
        }
    }
    return null;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmluZC1jdXQtYmVmb3JlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2h0bWwtZWRpdG9yL3Byb3NlbWlycm9yL3V0aWxzL2ZpbmQtY3V0LWJlZm9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQSxNQUFNLFVBQVUsYUFBYSxDQUFDLElBQWlCO0lBRTNDLCtEQUErRDtJQUMvRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtRQUNsQyw2Q0FBNkM7UUFDN0MsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3RDLHVEQUF1RDtZQUN2RCwrQkFBK0I7WUFDL0IsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDbkIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQy9DO1lBRUQsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNsQyxNQUFNO2FBQ1Q7U0FDSjtLQUNKO0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9Qcm9zZU1pcnJvci9wcm9zZW1pcnJvci1jb21tYW5kcy9ibG9iL21hc3Rlci9zcmMvY29tbWFuZHMuanMjTDkwXG4vLyBLZWVwIGdvaW5nIGxlZnQgdXAgdGhlIHRyZWUsIHdpdGhvdXQgZ29pbmcgYWNyb3NzIGlzb2xhdGluZyBib3VuZGFyaWVzLCB1bnRpbCB3ZVxuLy8gY2FuIGdvIGFsb25nIHRoZSB0cmVlIGF0IHRoYXQgc2FtZSBsZXZlbFxuLy9cbi8vIFlvdSBjYW4gdGhpbmsgb2YgdGhpcyBhcywgaWYgeW91IGNvdWxkIGNvbnN0cnVjdCBlYWNoIGRvY3VtZW50IGxpa2Ugd2UgZG8gaW4gdGhlIHRlc3RzLFxuLy8gcmV0dXJuIHRoZSBwb3NpdGlvbiBvZiB0aGUgZmlyc3QgKSBiYWNrd2FyZHMgZnJvbSB0aGUgY3VycmVudCBzZWxlY3Rpb24uXG5pbXBvcnQge1Jlc29sdmVkUG9zfSBmcm9tIFwicHJvc2VtaXJyb3ItbW9kZWxcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRDdXRCZWZvcmUoJHBvczogUmVzb2x2ZWRQb3MpOiBSZXNvbHZlZFBvcyB8IG51bGwge1xuXG4gICAgLy8gcGFyZW50IGlzIG5vbi1pc29sYXRpbmcsIHNvIHdlIGNhbiBsb29rIGFjcm9zcyB0aGlzIGJvdW5kYXJ5XG4gICAgaWYgKCEkcG9zLnBhcmVudC50eXBlLnNwZWMuaXNvbGF0aW5nKSB7XG4gICAgICAgIC8vIHNlYXJjaCB1cCB0aGUgdHJlZSBmcm9tIHRoZSBwb3NcInMgKnBhcmVudCpcbiAgICAgICAgZm9yIChsZXQgaSA9ICRwb3MuZGVwdGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgLy8gc3RhcnRpbmcgZnJvbSB0aGUgaW5uZXIgbW9zdCBub2RlXCJzIHBhcmVudCwgZmluZCBvdXRcbiAgICAgICAgICAgIC8vIGlmIHdlXCJyZSBub3QgaXRzIGZpcnN0IGNoaWxkXG4gICAgICAgICAgICBpZiAoJHBvcy5pbmRleChpKSA+IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJHBvcy5kb2MucmVzb2x2ZSgkcG9zLmJlZm9yZShpICsgMSkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoJHBvcy5ub2RlKGkpLnR5cGUuc3BlYy5pc29sYXRpbmcpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xufVxuIl19